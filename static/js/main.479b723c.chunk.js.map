{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","displayReset","handleSortChange","newSortType","className","type","classNames","onClick","previous","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECfQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,SDFAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMV,EA/BD,SACLA,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOX,GAqBzB,OAnBIS,IAAaX,EAASU,MACxBG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKhB,EAASmB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAKXZ,GACFK,EAAaQ,UAGRR,EAMOS,CAAkBjB,EAAiB,CAAEG,aAAYG,aACzDY,EAAef,GAAcG,IAAaX,EAASU,KAEnDc,EAAmB,SAACC,GACxBb,EAAYa,IAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYjB,IAAaX,EAASiB,WAGtCY,QAAS,WACPL,EAAiBxB,EAASiB,WAV9B,iCAgBA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYjB,IAAaX,EAASmB,SAGtCU,QAAS,WACPL,EAAiBxB,EAASmB,SAV9B,4BAgBA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAapB,IAGjBqB,QArDoB,WAC1BpB,GAAc,SAAAqB,GAAQ,OAAKA,MA2CvB,qBAcCP,GACC,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,YACA,YAEFC,QA9DS,WACjBpB,GAAc,GACdG,EAAYZ,EAASU,OAqDf,sBAcJ,cAAC,EAAD,CAAaR,MAAOA,QE1I1B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.479b723c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './components/ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n  const displayReset = isReversed || sortType !== SortType.NONE;\n\n  const handleSortChange = (newSortType: SortType) => {\n    setSortType(newSortType);\n  };\n\n  const handleReverseChange = () => {\n    setIsReversed(previous => !previous);\n  };\n\n  const resetState = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            handleSortChange(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            handleSortChange(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleReverseChange}\n        >\n          Reverse\n        </button>\n\n        {displayReset && (\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-danger',\n              'is-light',\n            )}\n            onClick={resetState}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ListOfGoods goods={goods} />\n    </div>\n  );\n};\n","type Props = {\n  goods: string[],\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good}\n        data-cy=\"Good\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}